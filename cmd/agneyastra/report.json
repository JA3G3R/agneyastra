{
  "api_keys": [
    {
      "api_key": "AIzaSyCWdjms6NgW_i2U7a1WpwDqV0S0pNJd_9I",
      "correlation_score": 0,
      "auth": {
        "anon-auth": {
          "Vulnerable": "error",
          "Error": "failed to sign up anonymously, status code: 400",
          "AuthType": "",
          "VulnConfig": "",
          "Remedy": "",
          "Details": null
        },
        "custom-token-login": {
          "Vulnerable": "error",
          "Error": "failed to log in with custom token, status code: 400",
          "AuthType": "",
          "VulnConfig": "",
          "Remedy": "",
          "Details": null
        },
        "send-signin-link": {
          "Vulnerable": "error",
          "Error": "failed to send sign-in link, status code: 400",
          "AuthType": "",
          "VulnConfig": "",
          "Remedy": "",
          "Details": null
        },
        "signup": {
          "Vulnerable": "error",
          "Error": "failed to sign up with email/password, status code: 400",
          "AuthType": "",
          "VulnConfig": "",
          "Remedy": "",
          "Details": null
        }
      },
      "services": {
        "bucket": {
          "delete": {
            "ferrari-prod": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "",
              "VulnConfig": "allow delete: if true; // Allows public delete access to storage objects.",
              "Remedy": "Disable public write access: 'allow delete: if request.auth != null;' or allow delete: if request.auth.token.role == \"\u003cuser-id\u003e\";'.",
              "Details": {
                "status_code": ""
              }
            }
          },
          "read": {},
          "write": {}
        },
        "firestore": {
          "delete": {},
          "read": {},
          "write": {}
        },
        "rtdb": {
          "delete": {
            "ferrari-prod": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "public",
              "VulnConfig": "allow delete: if true; // Allows public delete access to storage objects.",
              "Remedy": "Disable public write access: 'allow delete: if request.auth != null;' or allow delete: if request.auth.token.role == \"\u003cuser-id\u003e\";'.",
              "Details": {
                "rtdb_url": "https://ferrari-prod.firebaseio.com/agneyastrapocSU5Htv.json",
                "status_code": "404"
              }
            }
          },
          "read": {},
          "write": {}
        }
      },
      "secrets": null
    },
    {
      "api_key": "AIzaSyBv_y636JW_LYBcUQ7rN0b9Wukzop_gVEI",
      "correlation_score": 9.848484848484846,
      "auth": {
        "anon-auth": {
          "Vulnerable": "vulnerable:true",
          "Error": "",
          "AuthType": "",
          "VulnConfig": "",
          "Remedy": "",
          "Details": {
            "expiresIn": "3600",
            "idToken": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMGFlMTRkMjhkMTY1NzhiMzFjOGJlNmM4ZmRlZDM0ZDVlMWExYzEiLCJ0eXAiOiJKV1QifQ.eyJwcm92aWRlcl9pZCI6ImFub255bW91cyIsImlzcyI6Imh0dHBzOi8vc2VjdXJldG9rZW4uZ29vZ2xlLmNvbS9hZ25leWFzdHJhLXRlc3RpbmcyIiwiYXVkIjoiYWduZXlhc3RyYS10ZXN0aW5nMiIsImF1dGhfdGltZSI6MTczMzkwMjg4MiwidXNlcl9pZCI6InIyRXhXMUNGY3pkaGJzd1loaWxoY1o1SXcyUTIiLCJzdWIiOiJyMkV4VzFDRmN6ZGhic3dZaGlsaGNaNUl3MlEyIiwiaWF0IjoxNzMzOTAyODgyLCJleHAiOjE3MzM5MDY0ODIsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnt9LCJzaWduX2luX3Byb3ZpZGVyIjoiYW5vbnltb3VzIn19.c1aIfgx1NwFmS_1AzVI8DWC6RZWrLHHYJBHINmByqlq7rht3VQSdxC4_sRkQfsd62ImsvBM1Weed45vp-JEmpRcT_QO6MS4CqCdBB7wdY5B0OX6urw2Ng-bb5hbXftRV2LAt8f7VHHApIHeX9nyvQEhkdp4Zqs6P_5u3ydM3g1TIQboVcyjs0Fp_dStnmnnXMgTTgGSfgZ-6ZNWA5JbWSwImmXhI7AijuW61jta9cBrDVduSLUrzz2XeY4-VLtxG1rT0no2_K0D0l1BS0Fi90KIKTR7UY8YNnzqEC0o4b3jJThfevmuREizYyC-fdX_6KNFoykEwwjHWVpbs_VS8ww",
            "localId": "r2ExW1CFczdhbswYhilhcZ5Iw2Q2",
            "refreshToken": "AMf-vBww07tA0-FDboPxTSMvpGOIXoc0OZkxaXowyHz8fZNYWSw8mZRL0Eyup4KLl7z2FJTmmbIj7JZggO8iygTcYW1UYdkpjUFJzYrYHImLvoKCb5Zc5JfQ0i6PhL0od4Tfg5QQtgdL_M5GZPVxkCT3AfCCkOucqgMDuYGGYsKY1cmTCYbvShRzqdGYcyLUljzxQjkZlNER"
          }
        },
        "custom-token-login": {
          "Vulnerable": "error",
          "Error": "failed to log in with custom token, status code: 400",
          "AuthType": "",
          "VulnConfig": "",
          "Remedy": "",
          "Details": null
        },
        "send-signin-link": {
          "Vulnerable": "error",
          "Error": "failed to send sign-in link, status code: 400",
          "AuthType": "",
          "VulnConfig": "",
          "Remedy": "",
          "Details": null
        },
        "signup": {
          "Vulnerable": "vulnerable:true",
          "Error": "",
          "AuthType": "",
          "VulnConfig": "",
          "Remedy": "",
          "Details": {
            "email": "froooncxnc@example.com",
            "expiresIn": "3600",
            "idToken": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJkMGFlMTRkMjhkMTY1NzhiMzFjOGJlNmM4ZmRlZDM0ZDVlMWExYzEiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vYWduZXlhc3RyYS10ZXN0aW5nMiIsImF1ZCI6ImFnbmV5YXN0cmEtdGVzdGluZzIiLCJhdXRoX3RpbWUiOjE3MzM5MDI4ODQsInVzZXJfaWQiOiJ1OUd0TWpDNjFZZU5BdlhDTHBGcFZHSVpzbGMyIiwic3ViIjoidTlHdE1qQzYxWWVOQXZYQ0xwRnBWR0lac2xjMiIsImlhdCI6MTczMzkwMjg4NCwiZXhwIjoxNzMzOTA2NDg0LCJlbWFpbCI6ImZyb29vbmN4bmNAZXhhbXBsZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiZnJvb29uY3huY0BleGFtcGxlLmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6InBhc3N3b3JkIn19.jpNL17ZL9lv8y5dUD1HIgJvIYcNH9xp51t481zcyyeu4K34M3rLFv4K47cGm1w9F4xUUEZ3kW6b9pKyd59dQaPpYV_s3asm_e155xh7k5bQnWwgDan6g_UV1ZE5yuq4WtGT_Tb_9F1KsWUfiRbWHGC4nWjstOMazwfv_25FyQxoDsZlozisJ4nXerGDqYHhnuzytpp6d871_J_cJW3CCbIVkLx1a5WRuECx9VOzJXhoevM9J25AuBurQIvWSAE6gq9bvuZKpthjn5mp3I1xP8-6lYAR5ZaJc-IegYuc4lxfTXx7n0cW5EVxRLIWjSwYWhQ8gvDnEGw86yJ6ZK8V_fQ",
            "localId": "u9GtMjC61YeNAvXCLpFpVGIZslc2",
            "password": "2GgRWv-r(jhJ",
            "refreshToken": "AMf-vBx-WgCrkR1lnngVqQklW0feVTrV4UZ_3unJUvPsQqvR8RzpRvDANbu6A-UX1mCH462VIXSw7U-b60_KrnAdYDOFNBEpL03bFKaSOmikyFlWC9dhdfnOWHeYCD2wi_M_H9efaBh8kZsuQF9iqRra9RAlmSObS41yaaoWssv_3SU7_PxYnmIov3hcEb4rrjT620xcJvuLHr2_SY0Nq2UeVI2Q54FiwuJIcRSAgiAMJ6avdlOLHRg"
          }
        }
      },
      "services": {
        "bucket": {
          "delete": {
            "agneyastra-testing2": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "signup",
              "VulnConfig": "allow delete: if request.auth != null; // Permits all authenticated users without role/userid validation.",
              "Remedy": "Allow for specific roles or users: 'allow delete: if request.auth.token.role == \"admin\";' or 'match /user_files/{userId}/{allPaths=**} { allow delete: if request.auth != null \u0026\u0026 request.auth.uid == userId; }'.",
              "Details": {
                "status_code": "404"
              }
            }
          },
          "read": {
            "agneyastra-testing2": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "signup",
              "VulnConfig": "allow read: if request.auth != null; // Permits access to all authenticated users without role/userid validation.",
              "Remedy": "Restrict to specific roles or verified users: 'allow read: if request.auth.token.role == \"\u003cuser-id\u003e\";' or 'match /user_files/{userId}/{allPaths=**} { allow read: if request.auth != null \u0026\u0026 request.auth.uid == userId; }'.",
              "Details": {
                "Contents": {
                  "prefixes": {
                    "testing/": {
                      "prefixes": {
                        "testing/inner-folder/": {
                          "prefixes": {},
                          "items": [
                            {
                              "name": "testing/inner-folder/burpcert.der",
                              "bucket": "agneyastra-testing2.appspot.com"
                            }
                          ]
                        }
                      },
                      "items": [
                        {
                          "name": "testing/2",
                          "bucket": "agneyastra-testing2.appspot.com"
                        }
                      ]
                    }
                  },
                  "items": [
                    {
                      "name": "1",
                      "bucket": "agneyastra-testing2.appspot.com"
                    },
                    {
                      "name": "firebase.html",
                      "bucket": "agneyastra-testing2.appspot.com"
                    },
                    {
                      "name": "poc.txt",
                      "bucket": "agneyastra-testing2.appspot.com"
                    }
                  ]
                }
              }
            }
          },
          "write": {
            "agneyastra-testing2": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "signup",
              "VulnConfig": "allow write: if request.auth != null; // Permits all authenticated users without role/userid validation.",
              "Remedy": "Restrict writes to verified roles: 'allow write: if request.auth.token.role == \"editor\";' or 'match /user_files/{userId}/{allPaths=**} { allow write: if request.auth != null \u0026\u0026 request.auth.uid == userId; }'.",
              "Details": {
                "status_code": "200"
              }
            }
          }
        },
        "firestore": {
          "delete": {},
          "read": {
            "agneyastra-testing2": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "signup",
              "VulnConfig": "allow read: if request.auth != null; // Permits access to all authenticated users without role/userid validation.",
              "Remedy": "Restrict to specific roles or verified users: 'allow read: if request.auth.token.role == \"\u003cuser-id\u003e\";' or 'match /user_files/{userId}/{allPaths=**} { allow read: if request.auth != null \u0026\u0026 request.auth.uid == userId; }'.",
              "Details": null
            }
          },
          "write": {
            "agneyastra-testing2": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "signup,anon",
              "VulnConfig": "allow write: if request.auth != null; // Permits all authenticated users without role/userid validation.",
              "Remedy": "Restrict writes to verified roles: 'allow write: if request.auth.token.role == \"editor\";' or 'match /user_files/{userId}/{allPaths=**} { allow write: if request.auth != null \u0026\u0026 request.auth.uid == userId; }'.",
              "Details": null
            }
          }
        },
        "rtdb": {
          "delete": {
            "agneyastra-testing2": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "public",
              "VulnConfig": "allow delete: if true; // Allows public delete access to storage objects.",
              "Remedy": "Disable public write access: 'allow delete: if request.auth != null;' or allow delete: if request.auth.token.role == \"\u003cuser-id\u003e\";'.",
              "Details": {
                "rtdb_url": "https://agneyastra-testing2.firebaseio.com/agneyastrapocK9AoDj.json",
                "status_code": "404"
              }
            }
          },
          "read": {
            "agneyastra-testing2": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "public",
              "VulnConfig": "allow read: if true; // Allows unrestricted public access to storage objects.",
              "Remedy": "Disable public read access: 'allow read: if request.auth != null;' or allow read: if request.auth.token.role == \"\u003cuser-id\u003e\";'.",
              "Details": {
                "rtdb_url": "https://agneyastra-testing2-default-rtdb.firebaseio.com/.json",
                "status_code": "200"
              }
            }
          },
          "write": {
            "agneyastra-testing2": {
              "Vulnerable": "vulnerable:true",
              "Error": "",
              "AuthType": "public",
              "VulnConfig": "allow write: if true; // Allows public write access to storage objects.",
              "Remedy": "Disable public write access: 'allow write: if request.auth != null;' or allow write: if request.auth.token.role == \"\u003cuser-id\u003e\";'.",
              "Details": {
                "rtdb_url": "https://agneyastra-testing2-default-rtdb.firebaseio.com/agneyastrapocbjjgLQ.json",
                "status_code": "200"
              }
            }
          }
        }
      },
      "secrets": null
    }
  ]
}